using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using TourTravel_Web.Areas.Admin.CustomModels;
using TourTravel_Web.CustomModels;
using TourTravel_Web.Helpers;

namespace TourTravel_Web.Controllers
{
    public class GenTourPackageController : Controller
    {
        ApiConnection objAPI = new ApiConnection("General");
        private string FileUrl = ConfigurationManager.AppSettings["FileURL"];

        public ActionResult TourPackageList(int PageNo = 1, int PageSize = 10, string SearchTerm = "")
        {

            ViewBag.ActiveURL = "/general/tourpackagelist";
            string query = "PageNo=" + PageNo + "&PageSize=" + PageSize + "&SearchTerm=" + SearchTerm;
            GenTourPackageAPIVM apiModel = objAPI.GetRecordByQueryString<GenTourPackageAPIVM>("tourpackage", "GenTourPackageList", query);
            GenTourPackageVM model = new GenTourPackageVM();
            model.PackageList = apiModel.TourPackageList;
            model.PagingInfo = new PagingInfo { CurrentPage = PageNo, ItemsPerPage = PageSize, TotalItems = apiModel.TotalRecords };
            if (Request.IsAjaxRequest())
            {
                return PartialView("_pvtourpackageList", model);
            }
            return View(model);

        }

        public ActionResult TourPackageDetails(string name)
        {
            ViewBag.ActiveURL = "/general/tourpackagedetails";
            try
            {
                string query;
                query = "linktext=" + name;
                GenTourPackageAPIVM model = new GenTourPackageAPIVM();
                model.GenTourPackageDtlView = objAPI.GetRecordByQueryString<GenTourPackageDtlView>("tourpackage", "GenTourPackageDtl", query);
                long id = model.GenTourPackageDtlView.PackageID;
                model.GenTourPackageCoverImgView = objAPI.GetObjectByKey<GenTourPackageCoverImage>("tourpackage", "GenTourPackageCoverImgView", id.ToString(),"id");
                model.Itineraries = objAPI.GetRecordsByID<PackageItineraryView>("tourpackage", "itinerariesview", id);
                model.Inclusions = objAPI.GetRecordsByID<PackageInclusions>("tourpackage", "packageinclusions", id);
                model.Exclusions = objAPI.GetRecordsByID<PackageExclusions>("tourpackage", "packageexclusions", id);
                model.AdvActivity = objAPI.GetRecordsByID<PackageActivities>("tourpackage", "PackageActivities", id);
                var last = model.Itineraries.Last();
                var first = model.Itineraries.First();
                return View(model);
            }
            catch (AuthorizationException)
            {
                TempData["ErrMsg"] = "Your Login Session has expired. Please Login Again";
                return RedirectToAction("Login", "Account", new { Area = "" });
            }
        }
	}
}