using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using System.Web;
using System.Web.Mvc;
using TourTravel_Web.Areas.Admin.CustomModels;
using TourTravel_Web.Areas.Admin.Models;
using TourTravel_Web.Controllers;
using TourTravel_Web.Helpers;

namespace TourTravel_Web.Areas.Admin.Controllers
{
    [Authorize]
    public class TourPackageController : BaseController
    {
        ApiConnection objAPI = new ApiConnection("Admin");
        public ActionResult Index()
        {
            return View();
        }
        public ActionResult Add()
        {
            try
            {
                TourPackageManageModel1 model = new TourPackageManageModel1();
                model.PackageTypes = objAPI.GetAllRecords<utblMstPackageType>("configuration", "allpackagetypes");
                return View(model);
            }
            catch (AuthorizationException)
            {
                TempData["ErrMsg"] = "Your Login Session has expired. Please Login Again";
                return RedirectToAction("Login", "Account", new { Area = "" });
            }
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Add(TourPackageManageModel1 model)
        {
            try
            {
                if (ModelState.IsValid)
                {
                    string linktext = Regex.Replace(model.Package.PackageName, @"[^0-9A-Za-z ,]", "").Replace(" ", "-");
                    linktext = linktext.Replace("--", "-").ToLower();

                    model.Package.LinkText = linktext;
                    string jsonStr = JsonConvert.SerializeObject(model.Package);

                    string result = objAPI.PostRecordtoApI("packageconfig", "savepackage", jsonStr);
                    if (result.ToLower().Contains("error"))
                    {
                        TempData["ErrMsg"] = result;
                        model.PackageTypes = objAPI.GetAllRecords<utblMstPackageType>("configuration", "allpackagetypes");
                        return View(model);
                    }
                    return RedirectToAction("packageitinerary", new { @id = Convert.ToInt64(result) });
                }
                model.PackageTypes = objAPI.GetAllRecords<utblMstPackageType>("configuration", "allpackagetypes");
                return View(model);
            }
            catch (AuthorizationException)
            {
                TempData["ErrMsg"] = "Your Login Session has expired. Please Login Again";
                return RedirectToAction("Login", "Account", new { Area = "" });
            }
        }
        public ActionResult PackageItinerary(long id)
        {
            return View();
        }
	}
}