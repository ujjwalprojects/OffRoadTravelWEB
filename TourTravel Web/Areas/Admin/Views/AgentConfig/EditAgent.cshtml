@model TourTravel_Web.Areas.Admin.CustomModels.SaveAgent
@{
    ViewBag.Title = "EditAgent";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    List<string> Status = new List<string>() { "Active", "InActive" };
}
<link href="~/Content/NewCropper/cropper.min.css" rel="stylesheet" />
<style>
    /***************** Image Upload ****************/

    .cropper-container {
        top: 0 !important;
    }

    .cropper-preview {
        margin-left: auto;
        margin-right: auto;
        height: 200px;
        width: 300px;
        overflow: hidden;
        margin-top: 8px;
        margin-bottom: 4px;
        background-image: url("img/img-bg.png");
        background-repeat: repeat;
    }
</style>
<div class="title-div">
    <i class="fa fa-hand-o-right"></i>&nbsp;
    <span class="title">Agent</span>&nbsp;
    <small>Edit</small>
</div>
<div class="card bg-light">
    <div class="card-body">
        <div class="text-center">
            <label class="alert alert-info p-2"><small> Fields marked * are mandatory</small></label>
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Agent.AgentID)
            @Html.HiddenFor(m => m.Agent.AgentDocumentPath)
            <div class="col-md-12 ">
                <div class="form-group">
                    @Html.LabelFor(m => m.Agent.AgentEmail, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Agent.AgentEmail, new { @class = "form-control", autocomplete = "off", @placeholder = "Enter Email",@readonly="readonly" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(m => m.Agent.AgentName, new { @class = "control-label required" })
                    @Html.TextBoxFor(m => m.Agent.AgentName, new { @class = "form-control", autocomplete = "off", @placeholder = "Enter Full Name" })
                    @Html.ValidationMessageFor(m => m.Agent.AgentName)
                </div>
            </div>

            <div class="col-md-12 ">
                <div class="form-group">
                    @Html.LabelFor(m => m.Agent.AgentMobile, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Agent.AgentMobile, new { @class = "form-control", autocomplete = "off", @placeholder = "Enter Mobile No" })
                    @Html.ValidationMessageFor(m => m.Agent.AgentMobile)
                </div>
            </div>

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Agent.AgentAddress, new { @class = "control-label required" })
                        @Html.TextAreaFor(m => m.Agent.AgentAddress, new { @class = "form-control", autocomplete = "off", @placeholder = "Enter Address" })
                        @Html.ValidationMessageFor(m => m.Agent.AgentAddress)
                    </div>
                </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Agent.Status, new { @class = "control-label required" })
                    @Html.DropDownListFor(m => m.Agent.Status, new SelectList(Status), "----Select Status----", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Agent.Status)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="box box-primary">
                        <div class="box-body box-profile">
                            <div class="form-group required">

                                <div class="col-md-12">
                                    <div class="thumbnail">
                                        <div id="imgPhotoThumb">
                                            @if (Model.Agent.AgentDocumentPath != null)
                                            {
                                                <img src="@Model.Agent.AgentDocumentPath" alt="Add Photo" class="img-rounded text-center" style="width:195px;height:120px;vertical-align: middle" />
                                            }
                                            else
                                            {
                                                <img src="~/Content/Images/noimage.jpg" alt="Add Photo" class="img-rounded text-center" style="width:195px;height:120px; vertical-align: middle" />
                                            }

                                        </div>
                                    </div>
                                    <div style="width: 20%; margin-top: 2px; ">
                                        <button type="button" style="width:100%;" class="btn btn-danger btn-xs" data-toggle="modal" data-target="#photo-modal">
                                            Upload Photo
                                        </button>
                                    </div>
                                    @Html.TextAreaFor(m => m.cropper.PhotoNormal, new { @class = "hidden", @id = "PhotoNormal" })
                                    @Html.TextAreaFor(m => m.cropper.PhotoThumb, new { @class = "hidden", @id = "PhotoThumb" })
                                    @Html.ValidationMessageFor(m => m.cropper.PhotoNormal)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="action-div">
                @Html.ActionLink("Back To List", "AgentList", "AgentConfig", new { Area = "Admin" }, new { @class = "btn btn-secondary btn-sm" })
                <button type="submit" class="btn btn-sm btn-primary pull-right"><i class="fa fa-save"></i> Save</button>
            </div>
        }
    </div>
</div>
@*error message*@
<div id="ErrMsg" style="display:none;">
    <input type="hidden" id="ErrMsgHiddenField" name="ErrMsg" value="@TempData["ErrMsg"]" />
</div>
<div class="modal fade" id="photo-modal" aria-hidden="true" aria-labelledby="avatar-modal-label" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form class="avatar-form" action="#" enctype="multipart/form-data" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Upload Photo</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body clearfix">
                    <div class="row no-horizantal-padding">
                        <div class="col-md-8 clearfix">
                            <div class="action-div clearfix">
                                <div class="img-container">
                                    <img src="#" class="img-rounded">
                                </div>
                            </div>
                            <div class="action-div clearfix">
                                <div class="col-md-12 col-sm-12" style="padding: 0">
                                    <div class="btn btn-primary" for="inputImage" title="Upload image file">
                                        <input id="inputImage" class="img-rounded" name="file" type="file" accept="image/*" data-toggle="tooltip" title="Upload image" onchange="ShowFileMsg()">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 clearfix">
                            <div class="action-div text-center">
                                <span class="page-title-main-text"><strong>Preview</strong></span>
                                <div id="dataURLView" class="cropper-preview img-thumbnail">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="action-div clearfix">
                        <button class="btn btn-success pull-right" id="getDataURL" type="button"><i class="fa fa-save"></i> &nbsp;&nbsp;Done</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
   <script src="~/Content/NewCropper/cropper.min.js"></script>
<script type="text/javascript">
    function ShowFileMsg() {
        if ($('#inputImage').val() == "") {
            $("#ImageSpan").text("Upload photo...");
            $('#getDataURL').css("pointer-events", "none");
            $('#getDataURL').css("opacity:", ".3");
        }
        else {
            $("#ImageSpan").text("");
            $('#getDataURL').css("pointer-events", "");
            $('#getDataURL').css("opacity", "1");
        }

        if ($('#dataURLInto').val() == "") {
            $('#ModelDone').css("pointer-events", "none");
            $('#ModelDone').css("opacity:", ".3");
        }
        else {
            $('#ModelDone').css("pointer-events", "");
            $('#ModelDone').css("opacity", "1");
        }
    }
    $(function () {
        (function () {

            var $image = $('.img-container img');
            var $download = $('#download');
            var $dataX = $('#dataX');
            var $dataY = $('#dataY');
            var $dataHeight = $('#dataHeight');
            var $dataWidth = $('#dataWidth');
            var $dataRotate = $('#dataRotate');
            var $dataScaleX = $('#dataScaleX');
            var $dataScaleY = $('#dataScaleY');
            var options = {
                aspectRatio: 3 / 2,
                preview: '.cropper-preview',
                crop: function (e) {
                    $dataX.val(Math.round(e.x));
                    $dataY.val(Math.round(e.y));
                    $dataHeight.val(Math.round(e.height));
                    $dataWidth.val(Math.round(e.width));
                    $dataRotate.val(e.rotate);
                    $dataScaleX.val(e.scaleX);
                    $dataScaleY.val(e.scaleY);
                }
            };

            // Cropper
            $image.on({
                'build.cropper': function (e) {
                    console.log(e.type);
                },
                'built.cropper': function (e) {
                    console.log(e.type);
                },
                'cropstart.cropper': function (e) {
                    console.log(e.type, e.action);
                },
                'cropmove.cropper': function (e) {
                    console.log(e.type, e.action);
                },
                'cropend.cropper': function (e) {
                    console.log(e.type, e.action);
                },
                'crop.cropper': function (e) {
                    console.log(e.type, e.x, e.y, e.width, e.height, e.rotate, e.scaleX, e.scaleY);
                },
                'zoom.cropper': function (e) {
                    console.log(e.type, e.ratio);
                }
            }).cropper(options);

            // Import image
            var $inputImage = $('#inputImage');
            var URL = window.URL || window.webkitURL;
            var blobURL;

            if (URL) {
                $inputImage.change(function () {
                    var files = this.files;
                    var file;

                    if (!$image.data('cropper')) {
                        return;
                    }

                    if (files && files.length) {
                        file = files[0];

                        if (/^image\/\w+$/.test(file.type)) {
                            blobURL = URL.createObjectURL(file);
                            $image.one('built.cropper', function () {

                                // Revoke when load complete
                                URL.revokeObjectURL(blobURL);
                            }).cropper('reset').cropper('replace', blobURL);
                            $inputImage.val('');
                        } else {
                            window.alert('Please choose an image file.');
                        }
                    }
                });
            } else {
                $inputImage.prop('disabled', true).parent().addClass('disabled');
            }

            $("#getDataURL").click(function () {
                var dataURLNormal = $image.cropper("getDataURL", {
                    width: 1440,
                    height: 960
                }, "image/jpeg", 0.8);


                $(PhotoNormal).text(dataURLNormal);
                $(imgPhotoThumb).html('<img class="img-fluid" style="width:195px;height:120px;" src="' + dataURLNormal + '">');
                $('#photo-modal').modal('hide');
            });
        }());
    });
    function inputImage() {
    }
</script>

}


